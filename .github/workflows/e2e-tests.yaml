name: End-to-end tests

on:
  push:

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      # IAM user with root permissions for the account
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GENERIC_STACK_NAME: ${{ secrets.GENERIC_STACK_NAME }}
      # TODO: remove BUCKET_KEY
      BUCKET_KEY: ${{ secrets.BUCKET_KEY }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Install dependencies
        run: npm ci

      - name: Install AWS
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip

      - name: Generate Stack ID
        run: |
          RANDOM_STRING=`node -e "const crypto = require('crypto'); process.stdout.write(crypto.randomBytes(Math.ceil(8 * 0.5)).toString('hex').slice(0, 8));"`
          echo "STACK_NAME=${{ secrets.GENERIC_STACK_NAME }}-${RANDOM_STRING}" >> $GITHUB_ENV

      - name: Bootstrap AWS account for CDK
        run: |
          npx cdk bootstrap aws://`aws sts get-caller-identity | jq -r '.Account' | tr -d '\n'`/${{ secrets.AWS_REGION }}

      - name: List stacks
        run: npx cdk list

      - name: Deploy test stack
        run: |
          npx cdk deploy --context stackName=${{ env.STACK_NAME }} --require-approval never

      - name: List stacks
        run: npx cdk list

      - name: Run end-to-end tests
        run: npx tsx e2e-tests/index.ts

      - name: Destroy solution stack
        if: always()
        run: npx cdk destroy -f ${{ env.STACK_NAME }}
